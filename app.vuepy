v-def app_templ:
    div:
        layout:
            div(style = 'width:100%; padding: 0 10px;'):
                modal:
                div(v-show = 'show_explorer', class = 'explorer'):
                    folder_content:
                editor:

v-pyj:
+++
import_amd vue as Vue, codemirror/lib/codemirror as CodeMirror, rapydscript_web as rapydscript
import_amd axios.min as axios

from asset.rs_vue import RS_vue, V_collector
import asset.common as common
import components.folder_content as folder_content, components.editor as editor,\
        components.modal as modal, components.confirm as confirm,\
        components.app_selector as app_selector,components.base_layout as base_layout
import components.error as cerror
from store.root import Store


Vue.use(Store)
Vue.options.components = {
    confirm: confirm.make(),
    error: cerror.make(),
    app_selector: app_selector.make(),
}
web23py = document.getElementsByTagName('meta')[0].dataset.web23py
window.store = Store(rs_req, web23py)

vc = V_collector()
class App(RS_vue):
    def __init__(self):
        super(vc)
        self.store = store
        self.template = app_templ
        self.map_store = {
            show_explorer: 'show_explorer',
            w23p_app: 'w23p_app'
        }
        self.components = {
            folder_content: folder_content.make(),
            editor: editor.make(),
            layout: base_layout.make(),
            modal: modal.make(),
        }

    def _init_data(self):
        return {}

    @common.asyncer
    def mounted(self):
        yield store.dispatch('w23p_app_list')
        store.commit('toggle_busy', False)
        while not self.w23p_app:
            app2edit = yield store.dispatch('start_modal', 'app_selector', {app_list: store.get('w23p_app_list')} )
            if app2edit!='cancel':
                yield store.dispatch('load_fs_from_srv', app2edit)

# this is an AMD module, so we should do explicit export
exports.start = def(el):
    app = App()
    (new Vue(app)).$mount(el or '#app')

def main():
    pass
if __name__=='__main__':
    main()
---