v-css(store_in = 'app0.css'):
    .editor_welcome {
        position:fixed;
        left:0;
        top:50px;
        bottom:0;
        width:100%;
        background-color: #f5f4f4;
    }
    .editor_welcome>div{
        position:relative;
        top:30%;
        text-align:center;
    }
    .editor_up_bar{
        position: relative;
        box-shadow: 0 3px 5px #e6e6e6;
        z-index: 10;
    }
    .editor_up_bar>.left {
        display: inline-block;
        width: 69%;
    }
    .editor_up_bar>.right {
        display: inline-block;
        width: 30%;
        text-align:right;
    }
    .editor_up_bar .doc_title {
        display: inline-block;
        min-width: 200px;
        font-weight: bold;
        padding: 5px;
    }

    ul.doc_tabs{
        background-color: #eee;
    }
    .doc_tabs>li{
        display: inline-block;
        margin: 0 5px 0 0;
        background-color: white;
        padding: 5px;
        border: solid 1px lightgray;
        cursor: pointer;
    }
    .doc_tabs>li.active{
        border-top: solid 8px #0c0;
        border-bottom: solid 1px white;
    }
    .v2p_char{
        margin-left:-8px;
    }
v-def templ_editor:
    div():
        ul(class='doc_tabs'):
            li(v-for = 'doc, doc_k in doc_infos',
                :key = 'doc_k',
                :class = "{active: doc_num == doc_k}"
              ):
                span(@click = '(swap_doc(doc_k), edit_focus())'):
                    "{{doc.name}}"
                i(class='fa fa-close', @click = 'close(doc_k)',
                      :style = '{color: doc.is_saved ? null : "red"}',
                      :title = 'doc.is_saved ? null : "not saved"'
                 ):
        div(v-if = '!doc_num', class = 'editor_welcome'):
            div:
                h2(style ='background-color: white'):
                    span(style = 'color: #42b983;'):'Vue'
                    span(class = 'v2p_char',  style = 'color: black;'):'3'
                    span(class = 'v2p_char',style = 'color: #006ea5;'):'p'
                    span(class = 'v2p_char',style = 'color: #bfa03b;'):'y'
                    i(class = 'v2p_char',style = 'color: #b00;'):'j'
                    #span:' ... just one yet Vue+?'
                #div():
                #    button(type='button', @click = "\$emit('readme')", class = 'v-btn' ):
                #        'open README'
        div(v-show = 'doc_num', class= 'editor_up_bar'):
            div(class = 'left'):
                span(class = 'doc_title'): '{{doc_num && doc_info.name || ""}}'
                span: 'ln: {{cursor.line+1}} col: {{cursor.ch}}'
            div(class = 'right'):
                span: '{{doc_path}}'
        div(v-show = 'doc_num', style = 'position:fixed; left:0; top:140px; bottom:0px; width:100%;'):
            div(style = 'position: absolute; top:0px; bottom:50px; width:100%; padding: 0 10px;'):
                div( ref='cm_el', style = 'height:100%;'):
            div(style = 'position:fixed; bottom:0px; height:45px;'):
                div(v-if = 'error', @click = 'go_error', style = 'cursor:pointer;'):
                    div():
                        'File: {{error.filename}}'
                    template(v-if = 'error.readfile_error'):
                        '{{error.message}} {{error.readfile_error.line}}:{{error.readfile_error.col}}'
                    template(v-else):
                        '{{error.message}} {{error.line}}:{{error.col}}'
                    div: '{{error.stack}}'
                div(v-else):  'ok'





v-pyj:
+++
from asset.rs_vue import v_meth, v_computed, v_watch, RS_vue, V_collector

vc = V_collector()
class Editor(RS_vue):
    def __init__(self):
        super(vc)
        self.template = templ_editor
        self.map_store = {
            get_fs: 'get_fs',
            windows:'/editor.windows',
            doc_infos:'/editor.doc_infos',
            set_active_window:'/editor.set_active_window~',
            mount_cm:'/editor.mount_cm*',
            swap_doc:'/editor.swap_doc*',
            close:'/editor.close*',
        }
    def _init_data(self):
        ret={
            cursor: { line:0, ch:0},
            error: None
        }
        return ret

    @vc.computed
    def doc_num(self):
        return self.windows.w0 and self.windows.w0.doc_num

    @vc.computed
    def doc_info(self):
        return self.doc_num and self.doc_infos[self.doc_num]

    @vc.computed
    def doc_path(self):
        if not self.doc_info:
            return
        fs = self.get_fs()
        return fs.path_by_id(self.doc_info.id).path

    def mounted(self):
        def clean_up(cm):
            self.cm = cm
            self.set_active_window('w0')
            self.$refs.cm_el.children[0].style.lineHeight='1.5'
            cm.on('cursorActivity', def(): self.cursor_move();)
            #cm.setSize('100%', '80vh')
            cm.setSize('100%', '100%')
        self.mount_cm(self.$refs.cm_el, 'w0').then(clean_up)

    @vc.meth
    def edit_focus(self):
        self.$nextTick(def(): self.cm and self.cm.focus();)

    @vc.meth
    def cursor_move(self):
        self.cursor = self.cm.getCursor()

    @vc.watch('doc_num')
    def doc_num_watch(self, to_doc, cur_doc):
        self.$nextTick(def():
                  self.cm.refresh()
                  self.cursor_move()
                  self.edit_focus()
        )

    @vc.meth
    def go_error(self):
        err = self.error.readfile_error or self.error
        if not err or err.line == undefined: return;
        self.cm.focus()
        self.cm.doc.setCursor(err.line-1, err.col)

def make():
    return Editor()

def main():
    pass
if __name__=='__main__':
    main()
---