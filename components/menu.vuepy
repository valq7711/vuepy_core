v-def templ_menu:
    def T(%tag = 'template'):
    div:
        ul(v-for="side in ['left', 'right']", class="menu", :class='{right: side == "right"}'):
            li(v-for = 'item in menus[side]', :class = '{disabled: is_disabled(item) }'):
                T(v-if= 'item.href != undefined'):
                    a(class= "black",
                              :href= "mount_prop(item.href)",
                              @click= 'click(item, \$event)',
                              v-bind = "item.attrs"):
                        strong(v-html= 'mount_prop(item.label)'):
                T(v-else-if= 'item.subitems'):
                    a(class= "black", v-html= 'mount_prop(item.label)'):
                    ul: li(v-for = 'subitem in item.subitems', :class ='{disabled: is_disabled(subitem) }'):
                        a(  :href= "mount_prop(subitem.href)",
                            @click = 'click(subitem, \$event)',
                            v-html= 'mount_prop(subitem.label)',
                            v-bind = "subitem.attrs"):
                T(v-else):
                    slot(v-if= 'item.slot', :slot_name= 'item.slot'):

v-pyj:
+++
from asset.rs_vue import RS_vue, V_collector
from asset.common import SF

vc = V_collector()
class Menu(RS_vue):
    def __init__(self):
        super(vc)
        self.map_store = {
            #is_logged_in: '/user.is_logged_in',
            #user_name: '/user.user_name'
            w3p_app: 'w3p_app'
        }
        self.template = templ_menu
        self.props = {
            menus: Object,
        }
    def _init_data(self):
        ret = { }
        return ret

    @vc.meth
    def mount_prop(self, label):
        return SF(label, self)

    @vc.meth
    def click(self, item, e):
        if item.href and item.href.startsWith('#cmd:'):
            e.preventDefault()
        setTimeout(def(): self.$emit('click_item', item, e);,0)

    @vc.meth
    def is_disabled(self, it):
        return False
        #return it.disabled or it.requires_login and !self.is_logged_in
def make():
    return Menu()

if __name__== '__main__':
    main()
---
